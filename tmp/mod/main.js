{"intl":"var _intl_={\"en\":{\"welcome\":\"Welcome in the world of\"},\"fr\":{\"welcome\":\"Bienvenue dans le monde de\"}},_$=require(\"$\").intl;function _(){return _$(_intl_, arguments);}\r\n","src":"window['#main']=function(exports,module){ var _intl_={\"en\":{\"welcome\":\"Welcome in the world of\"},\"fr\":{\"welcome\":\"Bienvenue dans le monde de\"}},_$=require(\"$\").intl;function _(){return _$(_intl_, arguments);}\r\n var Cube = require(\"taquin.cube\");\r\nvar Grid = require(\"taquin.grid\");\r\nvar RotateTouch = require(\"taquin.rotate-touch\");\r\n\r\nvar W = Math.min( window.innerWidth, window.innerHeight );\r\nvar H = W;\r\nvar scene = new THREE.Scene();\r\nvar camera = new THREE.PerspectiveCamera( 75, W / H, 0.1, 1000 );\r\nvar renderer = new THREE.WebGLRenderer();\r\nrenderer.setSize( W, H );\r\ndocument.body.appendChild( renderer.domElement );\r\n\r\n\r\nvar selectedCube = null;\r\nvar nextSelectedCube = null;\r\nvar actions = [];\r\n\r\nvar mouse = { x: 0, y: 0 };\r\nrenderer.domElement.addEventListener('mousemove', function(event) {\r\n    mouse.x = ( event.clientX / W ) * 2 - 1;\r\n    mouse.y = - ( event.clientY / H ) * 2 + 1;\r\n});\r\nrenderer.domElement.addEventListener('mousedown', function(event) {\r\n    actions.push(\"MOUSEDOWN\");\r\n});\r\nrenderer.domElement.addEventListener('touchstart', function(event) {\r\n    mouse.x = ( event.clientX / W ) * 2 - 1;\r\n    mouse.y = - ( event.clientY / H ) * 2 + 1;\r\n    actions.push(\"MOUSEDOWN\");\r\n});\r\n\r\n\r\nvar material, material2 = new THREE.MeshPhongMaterial({\r\n    color: 0xff0000,\r\n    specular: 0x333333,\r\n    shininess: 15,\r\n    map: null,\r\n    specularMap: null,\r\n    normalMap: null\r\n});\r\n\r\nvar light1 = new THREE.DirectionalLight( 0xdddddd, 0.8 );\r\nvar light2 = new THREE.DirectionalLight( 0x9999ff, 0.5 );\r\nvar group = new THREE.Group();\r\n\r\nscene.add( group );\r\nscene.add( light1 );\r\nscene.add( light2 );\r\n\r\nvar grid = new Grid(3,3,3);\r\nvar x, y, z, cube;\r\nfor (x=0 ; x<3 ; x++) {\r\n    for (y=0 ; y<3 ; y++) {\r\n        for (z=0 ; z<3 ; z++) {\r\n            if (x != 1 || y != 1 || z != 1) {\r\n                cube = Cube(x, y, z);\r\n                grid.cube(x, y, z, cube);\r\n                group.add(cube);\r\n            }\r\n        }\r\n    }\r\n}\r\nmaterial = cube.material;\r\n\r\ncamera.position.z = 4.3;\r\nlight1.position.set(3,0,5);\r\nlight2.position.set(-1,2,4);\r\nvar time0 = Date.now();\r\ngroup.rotation.x = 0;\r\ngroup.rotation.y = 0;\r\ngroup.rotation.z = 0;\r\n\r\nvar touch = new RotateTouch(renderer.domElement);\r\n\r\nfunction render(time1) {\r\n    var deltaTime = time1 - time0;\r\n    touch.applyRotation(group, deltaTime);\r\n    time0 = time1;\r\n    touch.rotation.speedX *= .95;\r\n    touch.rotation.speedY *= .95;\r\n\r\n    if (!grid.anim(time1)) {\r\n        if (touch.tap()) {\r\n            var raycaster = new THREE.Raycaster();\r\n            var vector = new THREE.Vector3( touch.x, touch.y, 1 ).unproject( camera );\r\n            raycaster.set( camera.position, vector.sub( camera.position ).normalize() );\r\n            var intersects = raycaster.intersectObjects( group.children );\r\n            var cube = intersects.length > 0 ? intersects[0].object : null;\r\n            if (cube) {\r\n                grid.tap(cube, time1);\r\n            }\r\n        }\r\n    }\r\n\r\n    requestAnimationFrame( render );\r\n    renderer.render( scene, camera );\r\n}\r\nrequestAnimationFrame( render );\r\n }\r\n","zip":"window[\"#main\"]=function(e,n){function t(e){var n=e-T;if(y.applyRotation(h,n),T=e,y.rotation.speedX*=.95,y.rotation.speedY*=.95,!q.anim(e)&&y.tap()){var i=new THREE.Raycaster,o=new THREE.Vector3(y.x,y.y,1).unproject(u);i.set(u.position,o.sub(u.position).normalize());var r=i.intersectObjects(h.children),a=r.length>0?r[0].object:null;a&&q.tap(a,e)}requestAnimationFrame(t),l.render(s,u)}var i=(require(\"$\").intl,require(\"taquin.cube\")),o=require(\"taquin.grid\"),r=require(\"taquin.rotate-touch\"),a=Math.min(window.innerWidth,window.innerHeight),d=a,s=new THREE.Scene,u=new THREE.PerspectiveCamera(75,a/d,.1,1e3),l=new THREE.WebGLRenderer;l.setSize(a,d),document.body.appendChild(l.domElement);var c=[],E={x:0,y:0};l.domElement.addEventListener(\"mousemove\",function(e){E.x=e.clientX/a*2-1,E.y=2*-(e.clientY/d)+1}),l.domElement.addEventListener(\"mousedown\",function(e){c.push(\"MOUSEDOWN\")}),l.domElement.addEventListener(\"touchstart\",function(e){E.x=e.clientX/a*2-1,E.y=2*-(e.clientY/d)+1,c.push(\"MOUSEDOWN\")});var m,p=(new THREE.MeshPhongMaterial({color:16711680,specular:3355443,shininess:15,map:null,specularMap:null,normalMap:null}),new THREE.DirectionalLight(14540253,.8)),w=new THREE.DirectionalLight(10066431,.5),h=new THREE.Group;s.add(h),s.add(p),s.add(w);var v,R,H,f,q=new o(3,3,3);for(v=0;3>v;v++)for(R=0;3>R;R++)for(H=0;3>H;H++)(1!=v||1!=R||1!=H)&&(f=i(v,R,H),q.cube(v,R,H,f),h.add(f));m=f.material,u.position.z=4.3,p.position.set(3,0,5),w.position.set(-1,2,4);var T=Date.now();h.rotation.x=0,h.rotation.y=0,h.rotation.z=0;var y=new r(l.domElement);requestAnimationFrame(t)};\n//# sourceMappingURL=main.js.map","map":{"version":3,"file":"main.js.map","sources":["main.js"],"sourcesContent":["window['#main']=function(exports,module){ var _intl_={\"en\":{\"welcome\":\"Welcome in the world of\"},\"fr\":{\"welcome\":\"Bienvenue dans le monde de\"}},_$=require(\"$\").intl;function _(){return _$(_intl_, arguments);}\r\n var Cube = require(\"taquin.cube\");\r\nvar Grid = require(\"taquin.grid\");\r\nvar RotateTouch = require(\"taquin.rotate-touch\");\r\n\r\nvar W = Math.min( window.innerWidth, window.innerHeight );\r\nvar H = W;\r\nvar scene = new THREE.Scene();\r\nvar camera = new THREE.PerspectiveCamera( 75, W / H, 0.1, 1000 );\r\nvar renderer = new THREE.WebGLRenderer();\r\nrenderer.setSize( W, H );\r\ndocument.body.appendChild( renderer.domElement );\r\n\r\n\r\nvar selectedCube = null;\r\nvar nextSelectedCube = null;\r\nvar actions = [];\r\n\r\nvar mouse = { x: 0, y: 0 };\r\nrenderer.domElement.addEventListener('mousemove', function(event) {\r\n    mouse.x = ( event.clientX / W ) * 2 - 1;\r\n    mouse.y = - ( event.clientY / H ) * 2 + 1;\r\n});\r\nrenderer.domElement.addEventListener('mousedown', function(event) {\r\n    actions.push(\"MOUSEDOWN\");\r\n});\r\nrenderer.domElement.addEventListener('touchstart', function(event) {\r\n    mouse.x = ( event.clientX / W ) * 2 - 1;\r\n    mouse.y = - ( event.clientY / H ) * 2 + 1;\r\n    actions.push(\"MOUSEDOWN\");\r\n});\r\n\r\n\r\nvar material, material2 = new THREE.MeshPhongMaterial({\r\n    color: 0xff0000,\r\n    specular: 0x333333,\r\n    shininess: 15,\r\n    map: null,\r\n    specularMap: null,\r\n    normalMap: null\r\n});\r\n\r\nvar light1 = new THREE.DirectionalLight( 0xdddddd, 0.8 );\r\nvar light2 = new THREE.DirectionalLight( 0x9999ff, 0.5 );\r\nvar group = new THREE.Group();\r\n\r\nscene.add( group );\r\nscene.add( light1 );\r\nscene.add( light2 );\r\n\r\nvar grid = new Grid(3,3,3);\r\nvar x, y, z, cube;\r\nfor (x=0 ; x<3 ; x++) {\r\n    for (y=0 ; y<3 ; y++) {\r\n        for (z=0 ; z<3 ; z++) {\r\n            if (x != 1 || y != 1 || z != 1) {\r\n                cube = Cube(x, y, z);\r\n                grid.cube(x, y, z, cube);\r\n                group.add(cube);\r\n            }\r\n        }\r\n    }\r\n}\r\nmaterial = cube.material;\r\n\r\ncamera.position.z = 4.3;\r\nlight1.position.set(3,0,5);\r\nlight2.position.set(-1,2,4);\r\nvar time0 = Date.now();\r\ngroup.rotation.x = 0;\r\ngroup.rotation.y = 0;\r\ngroup.rotation.z = 0;\r\n\r\nvar touch = new RotateTouch(renderer.domElement);\r\n\r\nfunction render(time1) {\r\n    var deltaTime = time1 - time0;\r\n    touch.applyRotation(group, deltaTime);\r\n    time0 = time1;\r\n    touch.rotation.speedX *= .95;\r\n    touch.rotation.speedY *= .95;\r\n\r\n    if (!grid.anim(time1)) {\r\n        if (touch.tap()) {\r\n            var raycaster = new THREE.Raycaster();\r\n            var vector = new THREE.Vector3( touch.x, touch.y, 1 ).unproject( camera );\r\n            raycaster.set( camera.position, vector.sub( camera.position ).normalize() );\r\n            var intersects = raycaster.intersectObjects( group.children );\r\n            var cube = intersects.length > 0 ? intersects[0].object : null;\r\n            if (cube) {\r\n                grid.tap(cube, time1);\r\n            }\r\n        }\r\n    }\r\n\r\n    requestAnimationFrame( render );\r\n    renderer.render( scene, camera );\r\n}\r\nrequestAnimationFrame( render );\r\n }\r\n"],"names":["window","exports","module","render","time1","deltaTime","time0","touch","applyRotation","group","rotation","speedX","speedY","grid","anim","tap","raycaster","THREE","Raycaster","vector","Vector3","x","y","unproject","camera","set","position","sub","normalize","intersects","intersectObjects","children","cube","length","object","requestAnimationFrame","renderer","scene","Cube","require","intl","Grid","RotateTouch","W","Math","min","innerWidth","innerHeight","H","Scene","PerspectiveCamera","WebGLRenderer","setSize","document","body","appendChild","domElement","actions","mouse","addEventListener","event","clientX","clientY","push","material","light1","MeshPhongMaterial","color","specular","shininess","map","specularMap","normalMap","DirectionalLight","light2","Group","add","z","Date","now"],"mappings":"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"},"dependencies":["$","taquin.cube","taquin.grid","taquin.rotate-touch"]}