{"intl":"","src":"window['#taquin.grid']=function(exports,module){  /***************************************\r\n\r\n ***************************************/\r\n\r\nvar ANIM_SCALE = 1;\r\nvar ANIM_MOVE = 2;\r\n\r\n\r\nvar Grid = function(dx, dy, dz) {\r\n    this._cubes = [];\r\n    for (var loop = 0 ; loop < dx*dy*dz ; loop++) {\r\n        this._cubes.push(null);\r\n    }\r\n    this._dx = dx;\r\n    this._dy = dy;\r\n    this._dz = dz;\r\n    this._anim = {\r\n        start: 0,\r\n        end: 0,\r\n        cube: null,\r\n        type: 0,\r\n        x0: 0, x1: 0,\r\n        y0: 0, y1: 0,\r\n        z0: 0, z1: 0\r\n    };\r\n};\r\n\r\n\r\n/**\r\n * @return void\r\n */\r\nGrid.prototype.setHole = function( hole ) {\r\n    this._hole = hole;\r\n};\r\n\r\n\r\n/**\r\n * @return void\r\n */\r\nGrid.prototype.anim = function(time) {\r\n    var hole = this._hole;\r\n    var anim = this._anim;\r\n    if (!anim.cube) return false;\r\n    var dur = anim.end - anim.start;\r\n    if (anim.type == ANIM_SCALE) {\r\n        if (time >= anim.end) {\r\n            // End of animation. Set the scale to 1.\r\n            anim.cube.scale.x = 1;\r\n            anim.cube.scale.y = 1;\r\n            anim.cube.scale.z = 1;\r\n            anim.cube = null;\r\n        } else {\r\n            var scale = 1 - .75 * Math.sin(Math.PI * (time - anim.start) / dur);\r\n            anim.cube.scale.x = anim.cube.scale.y = anim.cube.scale.z = scale;\r\n        }\r\n    } else {\r\n        if (time >= anim.end) {\r\n            // End of animation. Set the to target position.\r\n            anim.cube.position.x = anim.x1;\r\n            anim.cube.position.y = anim.y1;\r\n            anim.cube.position.z = anim.z1;\r\n            anim.cube = null;\r\n        } else {\r\n            anim.cube.position.x = anim.x0 + (anim.x1 - anim.x0) * (time - anim.start) / dur;\r\n            anim.cube.position.y = anim.y0 + (anim.y1 - anim.y0) * (time - anim.start) / dur;\r\n            anim.cube.position.z = anim.z0 + (anim.z1 - anim.z0) * (time - anim.start) / dur;\r\n        }\r\n        if (hole) {\r\n            if (time >= anim.end) {\r\n                // End of animation. Set the to target position.\r\n                hole.position.x = anim.x0;\r\n                hole.position.y = anim.y0;\r\n                hole.position.z = anim.z0;\r\n                hole = null;\r\n            } else {\r\n                hole.position.x = anim.x1 + (anim.x0 - anim.x1) * (time - anim.start) / dur;\r\n                hole.position.y = anim.y1 + (anim.y0 - anim.y1) * (time - anim.start) / dur;\r\n                hole.position.z = anim.z1 + (anim.z0 - anim.z1) * (time - anim.start) / dur;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n};\r\n\r\n\r\n/**\r\n * @return void\r\n */\r\nGrid.prototype.tap = function(cube, time) {\r\n    var coords = this.find(cube);\r\n    if (!coords) return;\r\n    var cx = coords.x;\r\n    var cy = coords.y;\r\n    var cz = coords.z;\r\n    var x = cube.position.x;\r\n    var y = cube.position.y;\r\n    var z = cube.position.z;\r\n    var vect = null;\r\n    if (this.cube(cx + 1, cy + 0, cz + 0) === null) {\r\n        vect = [1,0,0];\r\n    }\r\n    else if (this.cube(cx - 1, cy + 0, cz + 0) === null) {\r\n        vect = [-1,0,0];\r\n    }\r\n    else if (this.cube(cx + 0, cy + 1, cz + 0) === null) {\r\n        vect = [0,1,0];\r\n    }\r\n    else if (this.cube(cx + 0, cy - 1, cz + 0) === null) {\r\n        vect = [0,-1,0];\r\n    }\r\n    else if (this.cube(cx + 0, cy + 0, cz + 1) === null) {\r\n        vect = [0,0,1];\r\n    }\r\n    else if (this.cube(cx + 0, cy + 0, cz - 1) === null) {\r\n        vect = [0,0,-1];\r\n    }\r\n    if (!vect) {\r\n        this._anim = {\r\n            cube: cube,\r\n            type: ANIM_SCALE,\r\n            start: time,\r\n            end: time + 300\r\n        };\r\n    } else {\r\n        this._anim = {\r\n            cube: cube,\r\n            type: ANIM_MOVE,\r\n            start: time,\r\n            end: time + 300,\r\n            x0: x, y0: y, z0: z,\r\n            x1: x + vect[0], y1: y + vect[1], z1: z + vect[2]\r\n        };\r\n        this.cube(cx + vect[0], cy + vect[1], cz + vect[2], cube);\r\n        this.cube(cx, cy, cz, null);\r\n        console.info(\"[taquin.grid] this._anim=...\", this._anim);\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * @return void\r\n */\r\nGrid.prototype.cube = function(x, y, z, cube) {\r\n    if ( x < 0 || y < 0 || z < 0 ) return undefined;\r\n    if ( x > 2 || y > 2 || z > 2 ) return undefined;\r\n    var index = Math.floor(x + y * this._dx + z * this._dx * this._dy);\r\n    if (index < 0 || index >= this._cubes.length) return undefined;\r\n    if (typeof cube === 'undefined') return this._cubes[index];\r\n    this._cubes[index] = cube;\r\n    return this;\r\n};\r\n\r\n\r\n/**\r\n * @return void\r\n */\r\nGrid.prototype.find = function(cube) {\r\n    var x, y, z;\r\n    for (z=0 ; z<this._dz; z++) {\r\n        for (y=0 ; y<this._dy; y++) {\r\n            for (x=0 ; x<this._dx; x++) {\r\n                if (cube === this.cube(x, y, z)) return { x: x, y: y, z: z };\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n};\r\n\r\n\r\nmodule.exports = Grid;\r\n }\n","zip":"window[\"#taquin.grid\"]=function(t,i){var s=1,e=2,n=function(t,i,s){this._cubes=[];for(var e=0;t*i*s>e;e++)this._cubes.push(null);this._dx=t,this._dy=i,this._dz=s,this._anim={start:0,end:0,cube:null,type:0,x0:0,x1:0,y0:0,y1:0,z0:0,z1:0}};n.prototype.setHole=function(t){this._hole=t},n.prototype.anim=function(t){var i=this._hole,e=this._anim;if(!e.cube)return!1;var n=e.end-e.start;if(e.type==s)if(t>=e.end)e.cube.scale.x=1,e.cube.scale.y=1,e.cube.scale.z=1,e.cube=null;else{var u=1-.75*Math.sin(Math.PI*(t-e.start)/n);e.cube.scale.x=e.cube.scale.y=e.cube.scale.z=u}else t>=e.end?(e.cube.position.x=e.x1,e.cube.position.y=e.y1,e.cube.position.z=e.z1,e.cube=null):(e.cube.position.x=e.x0+(e.x1-e.x0)*(t-e.start)/n,e.cube.position.y=e.y0+(e.y1-e.y0)*(t-e.start)/n,e.cube.position.z=e.z0+(e.z1-e.z0)*(t-e.start)/n),i&&(t>=e.end?(i.position.x=e.x0,i.position.y=e.y0,i.position.z=e.z0,i=null):(i.position.x=e.x1+(e.x0-e.x1)*(t-e.start)/n,i.position.y=e.y1+(e.y0-e.y1)*(t-e.start)/n,i.position.z=e.z1+(e.z0-e.z1)*(t-e.start)/n));return!0},n.prototype.tap=function(t,i){var n=this.find(t);if(n){var u=n.x,o=n.y,c=n.z,r=t.position.x,l=t.position.y,h=t.position.z,a=null;null===this.cube(u+1,o+0,c+0)?a=[1,0,0]:null===this.cube(u-1,o+0,c+0)?a=[-1,0,0]:null===this.cube(u+0,o+1,c+0)?a=[0,1,0]:null===this.cube(u+0,o-1,c+0)?a=[0,-1,0]:null===this.cube(u+0,o+0,c+1)?a=[0,0,1]:null===this.cube(u+0,o+0,c-1)&&(a=[0,0,-1]),a?(this._anim={cube:t,type:e,start:i,end:i+300,x0:r,y0:l,z0:h,x1:r+a[0],y1:l+a[1],z1:h+a[2]},this.cube(u+a[0],o+a[1],c+a[2],t),this.cube(u,o,c,null),console.info(\"[taquin.grid] this._anim=...\",this._anim)):this._anim={cube:t,type:s,start:i,end:i+300}}},n.prototype.cube=function(t,i,s,e){if(!(0>t||0>i||0>s||t>2||i>2||s>2)){var n=Math.floor(t+i*this._dx+s*this._dx*this._dy);if(!(0>n||n>=this._cubes.length))return\"undefined\"==typeof e?this._cubes[n]:(this._cubes[n]=e,this)}},n.prototype.find=function(t){var i,s,e;for(e=0;e<this._dz;e++)for(s=0;s<this._dy;s++)for(i=0;i<this._dx;i++)if(t===this.cube(i,s,e))return{x:i,y:s,z:e};return null},i.exports=n};\n//# sourceMappingURL=taquin.grid.js.map","map":{"version":3,"file":"taquin.grid.js.map","sources":["taquin.grid.js"],"sourcesContent":["window['#taquin.grid']=function(exports,module){  /***************************************\r\n\r\n ***************************************/\r\n\r\nvar ANIM_SCALE = 1;\r\nvar ANIM_MOVE = 2;\r\n\r\n\r\nvar Grid = function(dx, dy, dz) {\r\n    this._cubes = [];\r\n    for (var loop = 0 ; loop < dx*dy*dz ; loop++) {\r\n        this._cubes.push(null);\r\n    }\r\n    this._dx = dx;\r\n    this._dy = dy;\r\n    this._dz = dz;\r\n    this._anim = {\r\n        start: 0,\r\n        end: 0,\r\n        cube: null,\r\n        type: 0,\r\n        x0: 0, x1: 0,\r\n        y0: 0, y1: 0,\r\n        z0: 0, z1: 0\r\n    };\r\n};\r\n\r\n\r\n/**\r\n * @return void\r\n */\r\nGrid.prototype.setHole = function( hole ) {\r\n    this._hole = hole;\r\n};\r\n\r\n\r\n/**\r\n * @return void\r\n */\r\nGrid.prototype.anim = function(time) {\r\n    var hole = this._hole;\r\n    var anim = this._anim;\r\n    if (!anim.cube) return false;\r\n    var dur = anim.end - anim.start;\r\n    if (anim.type == ANIM_SCALE) {\r\n        if (time >= anim.end) {\r\n            // End of animation. Set the scale to 1.\r\n            anim.cube.scale.x = 1;\r\n            anim.cube.scale.y = 1;\r\n            anim.cube.scale.z = 1;\r\n            anim.cube = null;\r\n        } else {\r\n            var scale = 1 - .75 * Math.sin(Math.PI * (time - anim.start) / dur);\r\n            anim.cube.scale.x = anim.cube.scale.y = anim.cube.scale.z = scale;\r\n        }\r\n    } else {\r\n        if (time >= anim.end) {\r\n            // End of animation. Set the to target position.\r\n            anim.cube.position.x = anim.x1;\r\n            anim.cube.position.y = anim.y1;\r\n            anim.cube.position.z = anim.z1;\r\n            anim.cube = null;\r\n        } else {\r\n            anim.cube.position.x = anim.x0 + (anim.x1 - anim.x0) * (time - anim.start) / dur;\r\n            anim.cube.position.y = anim.y0 + (anim.y1 - anim.y0) * (time - anim.start) / dur;\r\n            anim.cube.position.z = anim.z0 + (anim.z1 - anim.z0) * (time - anim.start) / dur;\r\n        }\r\n        if (hole) {\r\n            if (time >= anim.end) {\r\n                // End of animation. Set the to target position.\r\n                hole.position.x = anim.x0;\r\n                hole.position.y = anim.y0;\r\n                hole.position.z = anim.z0;\r\n                hole = null;\r\n            } else {\r\n                hole.position.x = anim.x1 + (anim.x0 - anim.x1) * (time - anim.start) / dur;\r\n                hole.position.y = anim.y1 + (anim.y0 - anim.y1) * (time - anim.start) / dur;\r\n                hole.position.z = anim.z1 + (anim.z0 - anim.z1) * (time - anim.start) / dur;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n};\r\n\r\n\r\n/**\r\n * @return void\r\n */\r\nGrid.prototype.tap = function(cube, time) {\r\n    var coords = this.find(cube);\r\n    if (!coords) return;\r\n    var cx = coords.x;\r\n    var cy = coords.y;\r\n    var cz = coords.z;\r\n    var x = cube.position.x;\r\n    var y = cube.position.y;\r\n    var z = cube.position.z;\r\n    var vect = null;\r\n    if (this.cube(cx + 1, cy + 0, cz + 0) === null) {\r\n        vect = [1,0,0];\r\n    }\r\n    else if (this.cube(cx - 1, cy + 0, cz + 0) === null) {\r\n        vect = [-1,0,0];\r\n    }\r\n    else if (this.cube(cx + 0, cy + 1, cz + 0) === null) {\r\n        vect = [0,1,0];\r\n    }\r\n    else if (this.cube(cx + 0, cy - 1, cz + 0) === null) {\r\n        vect = [0,-1,0];\r\n    }\r\n    else if (this.cube(cx + 0, cy + 0, cz + 1) === null) {\r\n        vect = [0,0,1];\r\n    }\r\n    else if (this.cube(cx + 0, cy + 0, cz - 1) === null) {\r\n        vect = [0,0,-1];\r\n    }\r\n    if (!vect) {\r\n        this._anim = {\r\n            cube: cube,\r\n            type: ANIM_SCALE,\r\n            start: time,\r\n            end: time + 300\r\n        };\r\n    } else {\r\n        this._anim = {\r\n            cube: cube,\r\n            type: ANIM_MOVE,\r\n            start: time,\r\n            end: time + 300,\r\n            x0: x, y0: y, z0: z,\r\n            x1: x + vect[0], y1: y + vect[1], z1: z + vect[2]\r\n        };\r\n        this.cube(cx + vect[0], cy + vect[1], cz + vect[2], cube);\r\n        this.cube(cx, cy, cz, null);\r\n        console.info(\"[taquin.grid] this._anim=...\", this._anim);\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * @return void\r\n */\r\nGrid.prototype.cube = function(x, y, z, cube) {\r\n    if ( x < 0 || y < 0 || z < 0 ) return undefined;\r\n    if ( x > 2 || y > 2 || z > 2 ) return undefined;\r\n    var index = Math.floor(x + y * this._dx + z * this._dx * this._dy);\r\n    if (index < 0 || index >= this._cubes.length) return undefined;\r\n    if (typeof cube === 'undefined') return this._cubes[index];\r\n    this._cubes[index] = cube;\r\n    return this;\r\n};\r\n\r\n\r\n/**\r\n * @return void\r\n */\r\nGrid.prototype.find = function(cube) {\r\n    var x, y, z;\r\n    for (z=0 ; z<this._dz; z++) {\r\n        for (y=0 ; y<this._dy; y++) {\r\n            for (x=0 ; x<this._dx; x++) {\r\n                if (cube === this.cube(x, y, z)) return { x: x, y: y, z: z };\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n};\r\n\r\n\r\nmodule.exports = Grid;\r\n }\n"],"names":["window","exports","module","ANIM_SCALE","ANIM_MOVE","Grid","dx","dy","dz","this","_cubes","loop","push","_dx","_dy","_dz","_anim","start","end","cube","type","x0","x1","y0","y1","z0","z1","prototype","setHole","hole","_hole","anim","time","dur","scale","x","y","z","Math","sin","PI","position","tap","coords","find","cx","cy","cz","vect","console","info","index","floor","length"],"mappings":"AAAAA,OAAO,gBAAgB,SAASC,EAAQC,GAIxC,GAAIC,GAAa,EACbC,EAAY,EAGZC,EAAO,SAASC,EAAIC,EAAIC,GACxBC,KAAKC,SACL,KAAK,GAAIC,GAAO,EAAWL,EAAGC,EAAGC,EAAbG,EAAkBA,IAClCF,KAAKC,OAAOE,KAAK,KAErBH,MAAKI,IAAMP,EACXG,KAAKK,IAAMP,EACXE,KAAKM,IAAMP,EACXC,KAAKO,OACDC,MAAO,EACPC,IAAK,EACLC,KAAM,KACNC,KAAM,EACNC,GAAI,EAAGC,GAAI,EACXC,GAAI,EAAGC,GAAI,EACXC,GAAI,EAAGC,GAAI,GAQnBrB,GAAKsB,UAAUC,QAAU,SAAUC,GAC/BpB,KAAKqB,MAAQD,GAOjBxB,EAAKsB,UAAUI,KAAO,SAASC,GAC3B,GAAIH,GAAOpB,KAAKqB,MACZC,EAAOtB,KAAKO,KAChB,KAAKe,EAAKZ,KAAM,OAAO,CACvB,IAAIc,GAAMF,EAAKb,IAAMa,EAAKd,KAC1B,IAAIc,EAAKX,MAAQjB,EACb,GAAI6B,GAAQD,EAAKb,IAEba,EAAKZ,KAAKe,MAAMC,EAAI,EACpBJ,EAAKZ,KAAKe,MAAME,EAAI,EACpBL,EAAKZ,KAAKe,MAAMG,EAAI,EACpBN,EAAKZ,KAAO,SACT,CACH,GAAIe,GAAQ,EAAI,IAAMI,KAAKC,IAAID,KAAKE,IAAMR,EAAOD,EAAKd,OAASgB,EAC/DF,GAAKZ,KAAKe,MAAMC,EAAIJ,EAAKZ,KAAKe,MAAME,EAAIL,EAAKZ,KAAKe,MAAMG,EAAIH,MAG5DF,IAAQD,EAAKb,KAEba,EAAKZ,KAAKsB,SAASN,EAAIJ,EAAKT,GAC5BS,EAAKZ,KAAKsB,SAASL,EAAIL,EAAKP,GAC5BO,EAAKZ,KAAKsB,SAASJ,EAAIN,EAAKL,GAC5BK,EAAKZ,KAAO,OAEZY,EAAKZ,KAAKsB,SAASN,EAAIJ,EAAKV,IAAMU,EAAKT,GAAKS,EAAKV,KAAOW,EAAOD,EAAKd,OAASgB,EAC7EF,EAAKZ,KAAKsB,SAASL,EAAIL,EAAKR,IAAMQ,EAAKP,GAAKO,EAAKR,KAAOS,EAAOD,EAAKd,OAASgB,EAC7EF,EAAKZ,KAAKsB,SAASJ,EAAIN,EAAKN,IAAMM,EAAKL,GAAKK,EAAKN,KAAOO,EAAOD,EAAKd,OAASgB,GAE7EJ,IACIG,GAAQD,EAAKb,KAEbW,EAAKY,SAASN,EAAIJ,EAAKV,GACvBQ,EAAKY,SAASL,EAAIL,EAAKR,GACvBM,EAAKY,SAASJ,EAAIN,EAAKN,GACvBI,EAAO,OAEPA,EAAKY,SAASN,EAAIJ,EAAKT,IAAMS,EAAKV,GAAKU,EAAKT,KAAOU,EAAOD,EAAKd,OAASgB,EACxEJ,EAAKY,SAASL,EAAIL,EAAKP,IAAMO,EAAKR,GAAKQ,EAAKP,KAAOQ,EAAOD,EAAKd,OAASgB,EACxEJ,EAAKY,SAASJ,EAAIN,EAAKL,IAAMK,EAAKN,GAAKM,EAAKL,KAAOM,EAAOD,EAAKd,OAASgB,GAIpF,QAAO,GAOX5B,EAAKsB,UAAUe,IAAM,SAASvB,EAAMa,GAChC,GAAIW,GAASlC,KAAKmC,KAAKzB,EACvB,IAAKwB,EAAL,CACA,GAAIE,GAAKF,EAAOR,EACZW,EAAKH,EAAOP,EACZW,EAAKJ,EAAON,EACZF,EAAIhB,EAAKsB,SAASN,EAClBC,EAAIjB,EAAKsB,SAASL,EAClBC,EAAIlB,EAAKsB,SAASJ,EAClBW,EAAO,IAC+B,QAAtCvC,KAAKU,KAAK0B,EAAK,EAAGC,EAAK,EAAGC,EAAK,GAC/BC,GAAQ,EAAE,EAAE,GAE+B,OAAtCvC,KAAKU,KAAK0B,EAAK,EAAGC,EAAK,EAAGC,EAAK,GACpCC,GAAQ,GAAG,EAAE,GAE8B,OAAtCvC,KAAKU,KAAK0B,EAAK,EAAGC,EAAK,EAAGC,EAAK,GACpCC,GAAQ,EAAE,EAAE,GAE+B,OAAtCvC,KAAKU,KAAK0B,EAAK,EAAGC,EAAK,EAAGC,EAAK,GACpCC,GAAQ,EAAE,GAAG,GAE8B,OAAtCvC,KAAKU,KAAK0B,EAAK,EAAGC,EAAK,EAAGC,EAAK,GACpCC,GAAQ,EAAE,EAAE,GAE+B,OAAtCvC,KAAKU,KAAK0B,EAAK,EAAGC,EAAK,EAAGC,EAAK,KACpCC,GAAQ,EAAE,EAAE,KAEXA,GAQDvC,KAAKO,OACDG,KAAMA,EACNC,KAAMhB,EACNa,MAAOe,EACPd,IAAKc,EAAO,IACZX,GAAIc,EAAGZ,GAAIa,EAAGX,GAAIY,EAClBf,GAAIa,EAAIa,EAAK,GAAIxB,GAAIY,EAAIY,EAAK,GAAItB,GAAIW,EAAIW,EAAK,IAEnDvC,KAAKU,KAAK0B,EAAKG,EAAK,GAAIF,EAAKE,EAAK,GAAID,EAAKC,EAAK,GAAI7B,GACpDV,KAAKU,KAAK0B,EAAIC,EAAIC,EAAI,MACtBE,QAAQC,KAAK,+BAAgCzC,KAAKO,QAjBlDP,KAAKO,OACDG,KAAMA,EACNC,KAAMjB,EACNc,MAAOe,EACPd,IAAKc,EAAO,OAqBxB3B,EAAKsB,UAAUR,KAAO,SAASgB,EAAGC,EAAGC,EAAGlB,GACpC,KAAS,EAAJgB,GAAa,EAAJC,GAAa,EAAJC,GAClBF,EAAI,GAAKC,EAAI,GAAKC,EAAI,GAA3B,CACA,GAAIc,GAAQb,KAAKc,MAAMjB,EAAIC,EAAI3B,KAAKI,IAAMwB,EAAI5B,KAAKI,IAAMJ,KAAKK,IAC9D,MAAY,EAARqC,GAAaA,GAAS1C,KAAKC,OAAO2C,QACtC,MAAoB,mBAATlC,GAA6BV,KAAKC,OAAOyC,IACpD1C,KAAKC,OAAOyC,GAAShC,EACdV,QAOXJ,EAAKsB,UAAUiB,KAAO,SAASzB,GAC3B,GAAIgB,GAAGC,EAAGC,CACV,KAAKA,EAAE,EAAIA,EAAE5B,KAAKM,IAAKsB,IACnB,IAAKD,EAAE,EAAIA,EAAE3B,KAAKK,IAAKsB,IACnB,IAAKD,EAAE,EAAIA,EAAE1B,KAAKI,IAAKsB,IACnB,GAAIhB,IAASV,KAAKU,KAAKgB,EAAGC,EAAGC,GAAI,OAASF,EAAGA,EAAGC,EAAGA,EAAGC,EAAGA,EAIrE,OAAO,OAIXnC,EAAOD,QAAUI"},"dependencies":[]}